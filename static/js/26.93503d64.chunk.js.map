{"version":3,"sources":["components/common/Navigators.js","components/evolution/EvolutionConclude.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_const_Routes__WEBPACK_IMPORTED_MODULE_2__","getContent","pathKey","text","a","createElement","className","to","getRoute","path","Navigators","props","prev","next","r","__webpack_exports__","_common_Navigators__WEBPACK_IMPORTED_MODULE_1__","EvolutionConclude","href","rel","target"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAwBIK,GAxBJL,EAAA,IAwBiB,SAACM,EAASC,GACzB,OAAID,EACKL,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAASO,UAAU,MAAMC,GAAIC,YAASN,GAASO,MAAON,GAEtDN,EAAAO,EAAAC,cAAA,QAAMC,UAAU,gBAAgBH,KAI5BO,IA1BI,SAACC,GAClB,OACEd,EAAAO,EAAAC,cAAA,OAAKC,UAAU,QACbT,EAAAO,EAAAC,cAAA,QAAMC,UAAU,QACbL,EAAWU,EAAMC,KAAM,aAE1Bf,EAAAO,EAAAC,cAAA,QAAMC,UAAU,SACbL,EAAWU,EAAME,KAAM,iECbhCjB,EAAAkB,EAAAC,GAAA,IAAApB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAqB,EAAApB,EAAA,IAkCeqB,UA/BW,WACxB,OACEpB,EAAAO,EAAAC,cAAA,OAAKC,UAAU,QACbT,EAAAO,EAAAC,cAAA,OAAKC,UAAU,aAAf,mBACAT,EAAAO,EAAAC,cAAA,4LAIAR,EAAAO,EAAAC,cAAA,qRAKAR,EAAAO,EAAAC,cAAA,OAAKC,UAAU,gBAAf,SACAT,EAAAO,EAAAC,cAAA,qNAKAR,EAAAO,EAAAC,cAAA,iFACAR,EAAAO,EAAAC,cAAA,SACER,EAAAO,EAAAC,cAAA,KACAa,KAAK,gEACLC,IAAI,sBACJC,OAAO,UAHP,cAKFvB,EAAAO,EAAAC,cAACW,EAAA,EAAD,CAAYJ,KAAK","file":"static/js/26.93503d64.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport  {getRoute} from '../../const/Routes';\r\nimport './Navigators.css';\r\n\r\nconst Navigators = (props) => {\r\n  return (\r\n    <div className=\"navs\">\r\n      <span className=\"left\">\r\n        {getContent(props.prev, 'Previous')}\r\n      </span>\r\n      <span className=\"right\">\r\n        {getContent(props.next, 'Next')}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavigators.propTypes = {\r\n  prev: PropTypes.string,\r\n  next: PropTypes.string\r\n};\r\n\r\nlet getContent = (pathKey, text) => {\r\n  if (pathKey) {\r\n    return <NavLink className=\"btn\" to={getRoute(pathKey).path}>{text}</NavLink>;\r\n  } else {\r\n    return <span className=\"btn-disabled\">{text}</span>;\r\n  }\r\n}\r\n\r\nexport default Navigators;","import React from 'react';\r\nimport Navigators from '../common/Navigators';\r\n\r\nconst EvolutionConclude = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"pageTitle\">To Conclude ...</div>\r\n      <p>\r\n        In no way am I claiming this to be perfect. There is always room for improvement. My aim was \r\n        to have a shot at incorporating as many patterns as I can. That has been achieved.\r\n      </p>\r\n      <p>\r\n        There are code instances here that may look like overkill and one might feel that the same \r\n        could have been simplified. But again, let me reiterate, the idea was to incorporate as \r\n        many design patterns as I can. For the sake of learning, I was ok with the trade-off.\r\n      </p>\r\n      <div className=\"sectionTitle\">Fight</div>\r\n      <p>\r\n        One of the ways to output a simulated fight that I had put in was to record it out in a Json \r\n        file. I have worked on another pet-project where I use that same json as an input to replay \r\n        recorded fight.\r\n      </p>\r\n      <p>I had simulated and uploaded a number of fights on the same. Enjoy!!</p>\r\n      <p>\r\n        <a \r\n        href=\"https://premjitadhikary.github.io/Mesmerize/simulated-combat/\" \r\n        rel=\"noopener noreferrer\" \r\n        target=\"_blank\">Mesmerize</a>\r\n      </p>\r\n      <Navigators prev=\"evolutionMemento\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EvolutionConclude;"],"sourceRoot":""}