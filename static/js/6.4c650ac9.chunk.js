(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{37:function(e,t,a){"use strict";var n=a(0),r=a.n(n),o=a(6),i=a(1),l=(a(38),function(e,t){return e?r.a.createElement(o.c,{className:"btn",to:Object(i.b)(e).path},t):r.a.createElement("span",{className:"btn-disabled"},t)});t.a=function(e){return r.a.createElement("div",{className:"navs"},r.a.createElement("span",{className:"left"},l(e.prev,"Previous")),r.a.createElement("span",{className:"right"},l(e.next,"Next")))}},38:function(e,t,a){},39:function(e,t,a){"use strict";var n=a(8),r=a(0),o=a.n(r),i=(a(40),["abstract","assert","boolean","break","byte","case","catch","char","class","const","do","double","else","enum","extends","final","finally","float","for","goto","if","implements","import","instanceof","int","interface","long","native","new","package","private","protected","public","return","short","static","strictfp","super","switch","synchronized","this","throw","throws","transient","try","void","volatile","while","true","false","null"]),l=["Override"],c=function(e){return e=function(e){var t=e;return l.forEach(function(e){return t=t.replace(new RegExp("@\\b"+e+"\\b","g"),'<span style="color: lightgray; font-weight: bold;">@'+e+"</span>")}),t}(e=function(e){var t=e;return i.forEach(function(e){return t=t.replace(new RegExp("\\b"+e+"\\b","g"),'<span style="color: yellow; font-weight: bold;">'+e+"</span>")}),t}(e=function(e){for(var t="",a=!0,n=0;n<e.length;n++)"\n"===e[n]?(t+="<br>",a=!0):a&&" "===e[n]?t+="&nbsp;":(a=!1,t+=e[n]);return t}(e=function(e){var t=e,a=t.match(/\/\*[\s\S]*?\*\/|([^:]|^)\/\/.*$/gm);if(a){var r=Object(n.a)(a);r.forEach(function(e){return t=t.replace(e,'<span style="color: lightgray; font-style: italic;">'+e+"</span>")})}return t}(e))))};t.a=function(e){var t={__html:"<div id='pre'>"+c(e.code)+"</div>"};return o.a.createElement("div",{dangerouslySetInnerHTML:t})}},40:function(e,t,a){},41:function(e,t,a){},42:function(e,t,a){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var a=[],n=!0,r=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(a.push(i.value),!t||a.length!==t);n=!0);}catch(c){r=!0,o=c}finally{try{n||null==l.return||l.return()}finally{if(r)throw o}}return a}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var r=a(0),o=a.n(r),i=a(8),l={evolution:[{id:"evolutionMediatorCD",path:"/evolution/Evolution-Mediator-ClassDiagram.svg",text:"Mediator Class Diagram"},{id:"evolutionMediatorSD",path:"/evolution/Evolution-Mediator-SequenceDiagram.svg",text:"Mediator Sequence Diagram"},{id:"evolutionActionCommandCD",path:"/evolution/Evolution-ActionCommand-ClassDiagram.svg",text:"Action Command Class Diagram"},{id:"evolutionActionCommandSD",path:"/evolution/Evolution-ActionCommand-SequenceDiagram.svg",text:"Action Command Sequence Diagram"},{id:"evolutionStrategyTemplateCD",path:"/evolution/Evolution-ActionStrategyTemplate-ClassDiagram.svg",text:"Action Strategy and Template Class Diagram"},{id:"evolutionStrategyTemplateSD",path:"/evolution/Evolution-ActionStrategyTemplate-SequenceDiagram.svg",text:"Action Strategy and Template Sequence Diagram"},{id:"evolutionBridgeCD",path:"/evolution/Evolution-StrategyCommandBridge-ClassDiagram.svg",text:"Bridge Class Diagram"},{id:"evolutionObserverCD",path:"/evolution/Evolution-BeatObserver-ClassDiagram.svg",text:"Observer Class Diagram"},{id:"evolutionActionObserverSD",path:"/evolution/Evolution-ActionObserver-SequenceDiagram.svg",text:"Action Observer Sequence Diagram"},{id:"evolutionTikTokSD",path:"/evolution/Evolution-TikTok-SequenceDiagram.svg",text:"Tik Tok Sequence Diagram"},{id:"evolutionActionSD",path:"/evolution/Evolution-Action-SequenceDiagram.svg",text:"Action Sequence Diagram"},{id:"evolutionReactionSD",path:"/evolution/Evolution-Reaction-SequenceDiagram.svg",text:"Reaction Sequence Diagram"},{id:"evolutionDecoratorCD",path:"/evolution/Evolution-Decorator-ClassDiagram.svg",text:"Decorator Class Diagram"},{id:"evolutionDecoratorSD",path:"/evolution/Evolution-Decorator-SequenceDiagram.svg",text:"Decorator Sequence Diagram"},{id:"evolutionAdapterCD",path:"/evolution/Evolution-Adapter-ClassDiagram.svg",text:"Adapter Class Diagram"},{id:"evolutionAdapterSD",path:"/evolution/Evolution-Adapter-SequenceDiagram.svg",text:"Adapter Sequence Diagram"},{id:"evolutionCompositeCD",path:"/evolution/Evolution-Composite-ClassDiagram.svg",text:"Composite Class Diagram"},{id:"evolutionMoveVisitorCD",path:"/evolution/Evolution-MoveVisitor-ClassDiagram.svg",text:"Move Visitor Class Diagram"},{id:"evolutionMoveVisitorSD",path:"/evolution/Evolution-MoveVisitor-SequenceDiagram.svg",text:"Move Visitor Sequence Diagram"},{id:"evolutionFighterVisitorSD",path:"/evolution/Evolution-FighterVisitor-SequenceDiagram.svg",text:"Fighter Visitor Sequence Diagram"}],hierarchy:[{id:"hierarchyMove",path:"/hierarchy/Hierarchy-Move.svg",text:"Class Hierarchy of Moves"},{id:"hierarchyActionCommand",path:"/hierarchy/Hierarchy-ActionCommand.svg",text:"Class Hierarchy of ActionCommand"},{id:"hierarchyReactionCommand",path:"/hierarchy/Hierarchy-ReactionCommand.svg",text:"Class Hierarchy of ReactionCommand"},{id:"hierarchyFighter",path:"/hierarchy/Hierarchy-Fighter.svg",text:"Class Hierarchy of Fighter"}]},c=function(e){return[].concat(Object(i.a)(l.evolution),Object(i.a)(l.hierarchy)).find(function(t){return t.id===e})},s=(a(41),function(e){if(!e)return"large-content";switch(e){case"medium":return"large-content-med";case"large":return"large-content-full";case"small":default:return"large-content"}});t.a=function(e){var t=c(e.imgId),a=n(Object(r.useState)(!0),2),i=a[0],l=a[1];return o.a.createElement("div",{className:"center"},o.a.createElement("div",{className:"regular",onClick:function(){return l(!1)}},o.a.createElement("img",{className:"regular-content",src:"/KombatSim"+t.path,alt:t.text}),o.a.createElement("div",null,t.text)),o.a.createElement("div",{className:"large",style:{display:i?"none":"block"}},o.a.createElement("span",{className:"close",onClick:function(){return l(!0)}},"\xd7"),o.a.createElement("img",{className:s(e.imgSize),alt:t.text,src:"/KombatSim"+t.path}),o.a.createElement("div",{className:"caption"},t.text)))}},51:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),o=a(42),i=a(37),l=a(39);t.default=function(){return r.a.createElement("div",{className:"main"},r.a.createElement("div",{className:"pageTitle"},"Enhanced Fighters"),r.a.createElement("p",null,"I have professional fighters now. ",r.a.createElement("em",null,"Yeah!!!")),r.a.createElement("p",null,r.a.createElement("em",null,"What if I want my fighter to don an armor? What if I want him to slash a sword?")),r.a.createElement("p",null,"The armor changes the way the fighter reacts to moves and the sword changes the way the fighter acts."),r.a.createElement("p",null,"Well I can have two subclasses ",r.a.createElement("code",null,"ArmoredFighter")," and ",r.a.createElement("code",null,"FighterWithASword")," to have them."),r.a.createElement("p",null,r.a.createElement("em",null,"What if I want an armored fighter with a sword?")),r.a.createElement("p",null,"I can have a third subclass with code redundancy (since multiple inheritance) is not possible."),r.a.createElement("p",null,"Now if I have a third enhancement? A dart? It's another form of a weapon. But not exactly a weapon."),r.a.createElement("p",null,"How many subclasses? One for every possible combination will mean seven of them!"),r.a.createElement("p",null,"Here is where ",r.a.createElement("strong",null,"Decorator Pattern")," shines. This pattern allows us to stack multiple decorators on top of each other. Each of these adds a new functionality to the overridden methods."),r.a.createElement(o.a,{imgId:"evolutionDecoratorCD"}),r.a.createElement("p",null,"For every reaction, the ",r.a.createElement("code",null,"Armor")," decorator reduces the intensity of the ",r.a.createElement("code",null,"Move")," based on some parameter and passes it on to the wrapped Fighter."),r.a.createElement("p",null,"Here the wrapped Fighter is another decorator. As ",r.a.createElement("code",null,"Weapon")," decorator doesn't know how to ",r.a.createElement("code",null,"react()")," it just forwards the altered Move to the wrapped Fighter, which here is the original Fighter (who then reacts to the 'usually' weakened move)."),r.a.createElement("p",null,"Similarly, when it's time to ",r.a.createElement("code",null,"act()"),", the ",r.a.createElement("code",null,"Armor")," forwards it to ",r.a.createElement("code",null,"Weapon")," which responds with an alternate action instead of forwarding it to ",r.a.createElement("code",null,"Fighter"),"."),r.a.createElement("p",null,"The Sequence Diagram below depicts the behavior described above."),r.a.createElement(o.a,{imgId:"evolutionDecoratorSD"}),r.a.createElement("div",{className:"sectionTitle"},"Sample Code"),r.a.createElement(l.a,{code:"\n\n  public interface Fighter {\n    void act();\n    void react(Move move);\n  }\n\n  public class ConcreteFighter implements Fighter {\n    ArenaMediator arena;\n\n    @Override\n    public void act() {\n      // Fighter acts\n    }\n\n    @Override\n    public void react(Move move) {\n      // Fighter reacts\n    }\n  }\n\n  public abstract class FighterDecorator extends ConcreteFighter {\n    ConcreteFighter fighter;\n\n    public FighterDecorator(ConcreteFighter fighter) {\n      this.fighter = fighter;\n    }\n\n    @Override\n    public void act() {\n      this.fighter.act();\n    }\n\n    @Override\n    public void react(Move move) {\n      this.fighter.react(move);\n    }\n  }\n\n  public class Weapon extends FighterDecorator {\n\n    public Weapon(ConcreteFighter fighter) {\n      super(fighter);\n    }\n\n    @Override\n    public void act() {\n      // alternate action\n    }\n\n  }\n\n  public class Armor extends FighterDecorator {\n\n    public Armor(ConcreteFighter fighter) {\n      super(fighter);\n    }\n\n    @Override\n    public void react(Move move) {\n      reduce(move); // reduce the effect of the move\n      this.fighter.react(move);\n    }\n\n  }\n\n  // setting it up\n  ConcreteFighter baseFighter = new ConcreteFighter();\n  FighterDecorator fighterWithSword = new Weapon(baseFighter);\n  FighterDecorator armoredFighter = new Armor(baseFighter);\n  FighterDecorator armoredFighterWithSword = new Armor(new Weapon(baseFighter));\n\n"}),r.a.createElement(i.a,{prev:"evolutionFighter",next:"evolutionAdapter"}))}}}]);
//# sourceMappingURL=6.4c650ac9.chunk.js.map