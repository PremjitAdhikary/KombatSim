(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{37:function(e,t,a){"use strict";var n=a(0),i=a.n(n),o=a(6),r=a(1),c=(a(38),function(e,t){return e?i.a.createElement(o.c,{className:"btn",to:Object(r.b)(e).path},t):i.a.createElement("span",{className:"btn-disabled"},t)});t.a=function(e){return i.a.createElement("div",{className:"navs"},i.a.createElement("span",{className:"left"},c(e.prev,"Previous")),i.a.createElement("span",{className:"right"},c(e.next,"Next")))}},38:function(e,t,a){},39:function(e,t,a){"use strict";var n=a(8),i=a(0),o=a.n(i),r=(a(40),["abstract","assert","boolean","break","byte","case","catch","char","class","const","do","double","else","enum","extends","final","finally","float","for","goto","if","implements","import","instanceof","int","interface","long","native","new","package","private","protected","public","return","short","static","strictfp","super","switch","synchronized","this","throw","throws","transient","try","void","volatile","while","true","false","null"]),c=["Override"],l=function(e){return e=function(e){var t=e,a=t.match(/\/\*[\s\S]*?\*\/|([^:]|^)\/\/.*$/gm);if(a){var i=Object(n.a)(a);i.forEach(function(e){return t=t.replace(e,'<span style="color: lightgray; font-style: italic;">'+e+"</span>")})}return t}(e=function(e){var t=e;return c.forEach(function(e){return t=t.replace(new RegExp("@\\b"+e+"\\b","g"),'<span style="color: lightgray; font-weight: bold;">@'+e+"</span>")}),t}(e=function(e){var t=e;return r.forEach(function(e){return t=t.replace(new RegExp("\\b"+e+"\\b","g"),'<span style="color: yellow; font-weight: bold;">'+e+"</span>")}),t}(e)))};t.a=function(e){var t={__html:"<pre>"+l(e.code)+"</pre>"};return o.a.createElement("div",{dangerouslySetInnerHTML:t})}},40:function(e,t,a){},41:function(e,t,a){},42:function(e,t,a){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var a=[],n=!0,i=!1,o=void 0;try{for(var r,c=e[Symbol.iterator]();!(n=(r=c.next()).done)&&(a.push(r.value),!t||a.length!==t);n=!0);}catch(l){i=!0,o=l}finally{try{n||null==c.return||c.return()}finally{if(i)throw o}}return a}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var i=a(0),o=a.n(i),r=a(8),c={evolution:[{id:"evolutionMediatorCD",path:"/evolution/Evolution-Mediator-ClassDiagram.svg",text:"Mediator Class Diagram"},{id:"evolutionMediatorSD",path:"/evolution/Evolution-Mediator-SequenceDiagram.svg",text:"Mediator Sequence Diagram"},{id:"evolutionActionCommandCD",path:"/evolution/Evolution-ActionCommand-ClassDiagram.svg",text:"Action Command Class Diagram"},{id:"evolutionActionCommandSD",path:"/evolution/Evolution-ActionCommand-SequenceDiagram.svg",text:"Action Command Sequence Diagram"},{id:"evolutionStrategyTemplateCD",path:"/evolution/Evolution-ActionStrategyTemplate-ClassDiagram.svg",text:"Action Strategy and Template Class Diagram"},{id:"evolutionStrategyTemplateSD",path:"/evolution/Evolution-ActionStrategyTemplate-SequenceDiagram.svg",text:"Action Strategy and Template Sequence Diagram"},{id:"evolutionBridgeCD",path:"/evolution/Evolution-StrategyCommandBridge-ClassDiagram.svg",text:"Bridge Class Diagram"},{id:"evolutionObserverCD",path:"/evolution/Evolution-BeatObserver-ClassDiagram.svg",text:"Observer Class Diagram"},{id:"evolutionActionObserverSD",path:"/evolution/Evolution-ActionObserver-SequenceDiagram.svg",text:"Action Observer Sequence Diagram"},{id:"evolutionTikTokSD",path:"/evolution/Evolution-TikTok-SequenceDiagram.svg",text:"Tik Tok Sequence Diagram"},{id:"evolutionActionSD",path:"/evolution/Evolution-Action-SequenceDiagram.svg",text:"Action Sequence Diagram"},{id:"evolutionReactionSD",path:"/evolution/Evolution-Reaction-SequenceDiagram.svg",text:"Reaction Sequence Diagram"},{id:"evolutionDecoratorCD",path:"/evolution/Evolution-Decorator-ClassDiagram.svg",text:"Decorator Class Diagram"},{id:"evolutionDecoratorSD",path:"/evolution/Evolution-Decorator-SequenceDiagram.svg",text:"Decorator Sequence Diagram"},{id:"evolutionAdapterCD",path:"/evolution/Evolution-Adapter-ClassDiagram.svg",text:"Adapter Class Diagram"},{id:"evolutionAdapterSD",path:"/evolution/Evolution-Adapter-SequenceDiagram.svg",text:"Adapter Sequence Diagram"},{id:"evolutionCompositeCD",path:"/evolution/Evolution-Composite-ClassDiagram.svg",text:"Composite Class Diagram"},{id:"evolutionMoveVisitorCD",path:"/evolution/Evolution-MoveVisitor-ClassDiagram.svg",text:"Move Visitor Class Diagram"},{id:"evolutionMoveVisitorSD",path:"/evolution/Evolution-MoveVisitor-SequenceDiagram.svg",text:"Move Visitor Sequence Diagram"},{id:"evolutionFighterVisitorSD",path:"/evolution/Evolution-FighterVisitor-SequenceDiagram.svg",text:"Fighter Visitor Sequence Diagram"}],hierarchy:[{id:"hierarchyMove",path:"/hierarchy/Hierarchy-Move.svg",text:"Class Hierarchy of Moves"},{id:"hierarchyActionCommand",path:"/hierarchy/Hierarchy-ActionCommand.svg",text:"Class Hierarchy of ActionCommand"},{id:"hierarchyReactionCommand",path:"/hierarchy/Hierarchy-ReactionCommand.svg",text:"Class Hierarchy of ReactionCommand"},{id:"hierarchyFighter",path:"/hierarchy/Hierarchy-Fighter.svg",text:"Class Hierarchy of Fighter"}]},l=function(e){return[].concat(Object(r.a)(c.evolution),Object(r.a)(c.hierarchy)).find(function(t){return t.id===e})},s=(a(41),function(e){if(!e)return"large-content";switch(e){case"medium":return"large-content-med";case"large":return"large-content-full";case"small":default:return"large-content"}});t.a=function(e){var t=l(e.imgId),a=n(Object(i.useState)(!0),2),r=a[0],c=a[1];return o.a.createElement("div",{className:"center"},o.a.createElement("div",{className:"regular",onClick:function(){return c(!1)}},o.a.createElement("img",{src:""+t.path,alt:t.text}),o.a.createElement("div",null,t.text)),o.a.createElement("div",{className:"large",style:{display:r?"none":"block"}},o.a.createElement("span",{className:"close",onClick:function(){return c(!0)}},"\xd7"),o.a.createElement("img",{className:s(e.imgSize),alt:t.text,src:""+t.path}),o.a.createElement("div",{className:"caption"},t.text)))}},46:function(e,t,a){"use strict";a.r(t);var n=a(0),i=a.n(n),o=a(42),r=a(37),c=a(39);t.default=function(){return i.a.createElement("div",{className:"main"},i.a.createElement("div",{className:"pageTitle"},"A Fighter Hits"),i.a.createElement("p",null,"Basic Engine Up! Fighters can send moves to the arena. Next?"),i.a.createElement("p",null,"Unless you want the fighters to ",i.a.createElement("em",null,"stare")," each other to death, we need to give them the capability to hit."),i.a.createElement("p",null,"These hits should be different for each fighter. Maybe they depend on some characteristics of the fighter?"),i.a.createElement("p",null,"For example a hit from a Punch will have a far more impact if thrown by a stronger fighter. Similarly, an agile fighter has a deadlier Kick."),i.a.createElement("p",null,i.a.createElement("strong",null,"Command Pattern")," allows to wrap the request (in our case the hit) as objects which then can be executed based on the fighter's attributes."),i.a.createElement(o.a,{imgId:"evolutionActionCommandCD"}),i.a.createElement("p",null,"The ",i.a.createElement("code",null,"execute()")," method first creates a move (",i.a.createElement("code",null,"calculateMove()"),") based on the fighter attributes."),i.a.createElement("p",null,"Then sends it away to the arena for the opponent to react to."),i.a.createElement(o.a,{imgId:"evolutionActionCommandSD"}),i.a.createElement("div",{className:"sectionTitle"},"Sample Code"),i.a.createElement("p",null,"Example code to implement command pattern for the hits."),i.a.createElement(c.a,{code:"\n\n  public interface ActionCommand {\n    void execute();\n  }\n\n  public class AConcreteAction implements ActionCommand {\n    AConcreteFighter fighter;\n\n    public AConcreteAction(Fighter fighter) {\n      this.fighter = fighter;\n    }\n\n    @Override\n    public void execute() {\n      Move move = calculateMove();\n      sendMove(move);\n    }\n\n    private Move calculateMove() {\n      // create a move based on Fighter attributes\n    }\n\n    private void sendMove() {\n      this.fighter.arena().sendMove(move, this.fighter);\n    }\n\n  }\n\n  public class AConcreteFighter implements Fighter {\n    ArenaMediator arena;\n    ActionCommand action;\n    ...\n\n    public ArenaMediator arena() {\n      return this.arena;\n    }\n\n    @Override\n    public void act() {\n      action.execute();\n    }\n\n    public void addAction(ActionCommand action) {\n      this.action = action;\n    }\n    \n    ...\n\n  }\n\n  // setting it up\n  AConcreteFighter fighter = new AConcreteFighter();\n  ActionCommand anAction = new AConcreteAction();\n  fighter.addAction(anAction);\n\n"}),i.a.createElement(r.a,{prev:"evolutionMediator",next:"evolutionStrategy"}))}}}]);
//# sourceMappingURL=4.b6444455.chunk.js.map