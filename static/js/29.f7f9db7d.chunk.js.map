{"version":3,"sources":["components/common/Navigators.js","components/lambda/LambdaIntro.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_const_Routes__WEBPACK_IMPORTED_MODULE_2__","getContent","pathKey","text","a","createElement","className","to","getRoute","path","Navigators","props","prev","next","r","__webpack_exports__","_common_Navigators__WEBPACK_IMPORTED_MODULE_1__","LambdaIntro"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAwBIK,GAxBJL,EAAA,IAwBiB,SAACM,EAASC,GACzB,OAAID,EACKL,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAASO,UAAU,MAAMC,GAAIC,YAASN,GAASO,MAAON,GAEtDN,EAAAO,EAAAC,cAAA,QAAMC,UAAU,gBAAgBH,KAI5BO,IA1BI,SAACC,GAClB,OACEd,EAAAO,EAAAC,cAAA,OAAKC,UAAU,QACbT,EAAAO,EAAAC,cAAA,QAAMC,UAAU,QACbL,EAAWU,EAAMC,KAAM,aAE1Bf,EAAAO,EAAAC,cAAA,QAAMC,UAAU,SACbL,EAAWU,EAAME,KAAM,iECbhCjB,EAAAkB,EAAAC,GAAA,IAAApB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAqB,EAAApB,EAAA,IA+BeqB,UA5BK,WAClB,OACEpB,EAAAO,EAAAC,cAAA,OAAKC,UAAU,QACbT,EAAAO,EAAAC,cAAA,OAAKC,UAAU,aAAf,sBACAT,EAAAO,EAAAC,cAAA,sDACAR,EAAAO,EAAAC,cAAA,gFACAR,EAAAO,EAAAC,cAAA,2IAIAR,EAAAO,EAAAC,cAAA,SAAGR,EAAAO,EAAAC,cAAA,8BACHR,EAAAO,EAAAC,cAAA,yCAC+BR,EAAAO,EAAAC,cAAA,6BAD/B,oFAIAR,EAAAO,EAAAC,cAAA,wIAIAR,EAAAO,EAAAC,cAAA,gJAE0CR,EAAAO,EAAAC,cAAA,uDAE1CR,EAAAO,EAAAC,cAACW,EAAA,EAAD,CAAYH,KAAK","file":"static/js/29.f7f9db7d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport  {getRoute} from '../../const/Routes';\r\nimport './Navigators.css';\r\n\r\nconst Navigators = (props) => {\r\n  return (\r\n    <div className=\"navs\">\r\n      <span className=\"left\">\r\n        {getContent(props.prev, 'Previous')}\r\n      </span>\r\n      <span className=\"right\">\r\n        {getContent(props.next, 'Next')}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavigators.propTypes = {\r\n  prev: PropTypes.string,\r\n  next: PropTypes.string\r\n};\r\n\r\nlet getContent = (pathKey, text) => {\r\n  if (pathKey) {\r\n    return <NavLink className=\"btn\" to={getRoute(pathKey).path}>{text}</NavLink>;\r\n  } else {\r\n    return <span className=\"btn-disabled\">{text}</span>;\r\n  }\r\n}\r\n\r\nexport default Navigators;","import React from 'react';\r\nimport Navigators from '../common/Navigators';\r\n\r\nconst LambdaIntro = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"pageTitle\">What The Function?</div>\r\n      <p>Java now supports Functional Programming.</p>\r\n      <p>My first thought was 'No more OOPS? And what about Design Patterns?</p>\r\n      <p>\r\n        Most important question: If Design Patterns are a thing of the past, how will I impress the \r\n        interviewer in my next interview?'\r\n      </p>\r\n      <p><em>Panic Attack!!!</em></p>\r\n      <p>\r\n        After some frantic research, <em>enlightenment!!</em> Who says that Design Patterns and \r\n        Functional Programming can't go hand in hand?\r\n      </p>\r\n      <p>\r\n        The following sections are to highlight all such 'Design Pattern featuring Functional \r\n        Programming' moments in this project.\r\n      </p>\r\n      <p>\r\n        Most of these are hugely inspired (and some shamelessly copied) from the excellent talks of \r\n        Venkat Subramaniam. In all seriousness, <em>search and listen to what he has to say!</em>\r\n      </p>\r\n      <Navigators next=\"lambdaStrategy\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LambdaIntro;"],"sourceRoot":""}