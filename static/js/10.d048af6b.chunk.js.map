{"version":3,"sources":["components/common/Navigators.js","components/common/CodeSnippet.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","const/Images.js","components/common/ImageHolder.js","components/evolution/EvolutionStrategy.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_const_Routes__WEBPACK_IMPORTED_MODULE_2__","getContent","pathKey","text","a","createElement","className","to","getRoute","path","Navigators","props","prev","next","keywords","annotations","parseAndTag","someCode","processed","forEach","annot","replace","RegExp","openTag","processAnnotations","kw","processKeyword","lineStart","i","length","processIndentations","matches","match","comments","Object","C_DataBox_Creative_code_workspace_KombatSim_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","comment","processComments","CodeSnippet","preBlock","__html","code","react__WEBPACK_IMPORTED_MODULE_1___default","dangerouslySetInnerHTML","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","done","push","value","err","_iterableToArrayLimit","TypeError","_nonIterableRest","allImages","evolution","id","hierarchy","getImage","image","concat","toConsumableArray","find","largeContentClass","full","ImageHolder","img","imgId","_useState2","useState","largeDivDisabled","setLargeDivDisabled","react_default","onClick","src","process","alt","style","display","imgSize","r","__webpack_exports__","_common_ImageHolder__WEBPACK_IMPORTED_MODULE_1__","_common_Navigators__WEBPACK_IMPORTED_MODULE_2__","_common_CodeSnippet__WEBPACK_IMPORTED_MODULE_3__","EvolutionStrategy","slash"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAwBIK,GAxBJL,EAAA,IAwBiB,SAACM,EAASC,GACzB,OAAID,EACKL,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAASO,UAAU,MAAMC,GAAIC,YAASN,GAASO,MAAON,GAEtDN,EAAAO,EAAAC,cAAA,QAAMC,UAAU,gBAAgBH,KAI5BO,IA1BI,SAACC,GAClB,OACEd,EAAAO,EAAAC,cAAA,OAAKC,UAAU,QACbT,EAAAO,EAAAC,cAAA,QAAMC,UAAU,QACbL,EAAWU,EAAMC,KAAM,aAE1Bf,EAAAO,EAAAC,cAAA,QAAMC,UAAU,SACbL,EAAWU,EAAME,KAAM,4FCR1BC,SAAW,CACf,WAAY,SAAU,UAAW,QAAS,OAAQ,OAAQ,QAAS,OAAQ,QAAS,QACpF,KAAM,SAAU,OAAQ,OAAQ,UAAW,QAAS,UAAW,QAAS,MAAO,OAAQ,KACvF,aAAc,SAAU,aAAc,MAAO,YAAa,OAAQ,SAAU,MAAO,UACnF,UAAW,YAAa,SAAU,SAAU,QAAS,SAAU,WAAY,QAAS,SACpF,eAAgB,OAAQ,QAAS,SAAU,YAAa,MAAO,OAAQ,WAAY,QACnF,OAAQ,QAAS,SAGbC,EAAc,CAAC,YA2DfC,EAAc,SAACC,GAKnB,OADAA,EAhDyB,SAACA,GAC1B,IAAIC,EAAYD,EAOhB,OALAF,EAAYI,QAAQ,SAAAC,GAAK,OACvBF,EAAYA,EAAUG,QACE,IAAIC,OAAO,OAAOF,EAAM,MAAO,KAC/BG,uDAAYH,EAnBvB,aAqBRF,EAwCIM,CADXP,EA1DqB,SAACA,GACtB,IAAIC,EAAYD,EAOhB,OALAH,EAASK,QAAQ,SAAAM,GAAE,OACjBP,EAAYA,EAAUG,QACE,IAAIC,OAAO,MAAMG,EAAG,MAAO,KAHvC,mDAIoBA,EARnB,aAURP,EAkDIQ,CADXT,EAnB0B,SAACA,GAG3B,IAFA,IAAIC,EAAY,GACZS,GAAY,EACPC,EAAE,EAAGA,EAAEX,EAASY,OAAQD,IACX,OAAhBX,EAASW,IACXV,GAAa,OACbS,GAAY,GACHA,GAA6B,MAAhBV,EAASW,GAC/BV,GAAa,UAEbS,GAAY,EACZT,GAAaD,EAASW,IAG1B,OAAOV,EAKIY,CADXb,EAlCsB,SAACA,GACvB,IAAIC,EAAYD,EAIZc,EAAUb,EAAUc,MADX,sCAEb,GAAID,EAAS,CACX,IAAIE,EAAQC,OAAAC,EAAA,EAAAD,CAAOH,GAEnBE,EAASd,QACP,SAAAiB,GAAO,OAAIlB,EAAYA,EAAUG,QAAQe,EAF7B,uDAE8CA,EAlC/C,aAqCf,OAAOlB,EAqBImB,CAAgBpB,OAkBdqB,IAXK,SAAC3B,GACnB,IAEM4B,EAAW,CAAEC,OAAQ,iBAFZxB,EAAYL,EAAM8B,MAEwB,UACzD,OAAOC,EAAAtC,EAAAC,cAAA,OAAKsC,wBAA0BJ,gFClFzB,SAAAK,EAAAC,EAAAjB,GACf,OCJe,SAAAiB,GACf,GAAAC,MAAAC,QAAAF,GAAA,OAAAA,EDGSG,CAAcH,IEJR,SAAAA,EAAAjB,GACf,IAAAqB,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,OAAAC,EAEA,IACA,QAAAC,EAAAC,EAAAV,EAAAW,OAAAC,cAA6CP,GAAAI,EAAAC,EAAA1C,QAAA6C,QAC7CT,EAAAU,KAAAL,EAAAM,QAEAhC,GAAAqB,EAAApB,SAAAD,GAH4EsB,GAAA,IAKzE,MAAAW,GACHV,GAAA,EACAC,EAAAS,EACG,QACH,IACAX,GAAA,MAAAK,EAAA,QAAAA,EAAA,SACK,QACL,GAAAJ,EAAA,MAAAC,GAIA,OAAAH,EFnBgCa,CAAoBjB,EAAAjB,IGJrC,WACf,UAAAmC,UAAA,wDHGgEC,8BIJnDC,EAAY,CACvBC,UAAY,CACV,CACEC,GAAG,sBACH1D,KAAK,iDACLN,KAAK,0BAEP,CACEgE,GAAG,sBACH1D,KAAK,oDACLN,KAAK,6BAEP,CACEgE,GAAG,2BACH1D,KAAK,sDACLN,KAAK,gCAEP,CACEgE,GAAG,2BACH1D,KAAK,yDACLN,KAAK,mCAEP,CACEgE,GAAG,8BACH1D,KAAK,+DACLN,KAAK,8CAEP,CACEgE,GAAG,8BACH1D,KAAK,kEACLN,KAAK,iDAEP,CACEgE,GAAG,oBACH1D,KAAK,8DACLN,KAAK,wBAEP,CACEgE,GAAG,sBACH1D,KAAK,qDACLN,KAAK,0BAEP,CACEgE,GAAG,4BACH1D,KAAK,0DACLN,KAAK,oCAEP,CACEgE,GAAG,oBACH1D,KAAK,kDACLN,KAAK,4BAEP,CACEgE,GAAG,oBACH1D,KAAK,kDACLN,KAAK,2BAEP,CACEgE,GAAG,sBACH1D,KAAK,oDACLN,KAAK,6BAEP,CACEgE,GAAG,uBACH1D,KAAK,kDACLN,KAAK,2BAEP,CACEgE,GAAG,uBACH1D,KAAK,qDACLN,KAAK,8BAEP,CACEgE,GAAG,qBACH1D,KAAK,gDACLN,KAAK,yBAEP,CACEgE,GAAG,qBACH1D,KAAK,mDACLN,KAAK,4BAEP,CACEgE,GAAG,uBACH1D,KAAK,kDACLN,KAAK,2BAEP,CACEgE,GAAG,yBACH1D,KAAK,oDACLN,KAAK,8BAEP,CACEgE,GAAG,yBACH1D,KAAK,uDACLN,KAAK,iCAEP,CACEgE,GAAG,4BACH1D,KAAK,0DACLN,KAAK,qCAGTiE,UAAY,CACV,CACED,GAAG,gBACH1D,KAAK,gCACLN,KAAK,4BAEP,CACEgE,GAAG,yBACH1D,KAAK,yCACLN,KAAK,oCAEP,CACEgE,GAAG,2BACH1D,KAAK,2CACLN,KAAK,sCAEP,CACEgE,GAAG,mBACH1D,KAAK,mCACLN,KAAK,gCAKEkE,EAAW,SAACC,GACvB,MAAO,GAAAC,OAAArC,OAAAsC,EAAA,EAAAtC,CAAI+B,EAAUC,WAAdhC,OAAAsC,EAAA,EAAAtC,CAA4B+B,EAAUG,YAAWK,KAAK,SAAA7C,GAAC,OAAIA,EAAEuC,KAAOG,KC7FzEI,SAAoB,SAACC,GACvB,IAAKA,EACH,MAAO,gBACT,OAAOA,GACL,IAAK,SACH,MAAO,oBACT,IAAK,QACH,MAAO,qBACT,IAAK,QACL,QACE,MAAO,mBAIEC,IA5CK,SAAAjE,GAClB,IAAIkE,EAAMR,EAAS1D,EAAMmE,OADEC,EAAAnC,EAEqBoC,oBAAS,GAF9B,GAEpBC,EAFoBF,EAAA,GAEFG,EAFEH,EAAA,GAI3B,OACEI,EAAA/E,EAAAC,cAAA,OAAKC,UAAU,UACb6E,EAAA/E,EAAAC,cAAA,OAAKC,UAAU,UAAU8E,QAAS,kBAAMF,GAAoB,KAC1DC,EAAA/E,EAAAC,cAAA,OACEC,UAAU,kBACV+E,IAAKC,aAAyBT,EAAIpE,KAClC8E,IAAKV,EAAI1E,OAEXgF,EAAA/E,EAAAC,cAAA,WAAMwE,EAAI1E,OAEZgF,EAAA/E,EAAAC,cAAA,OAAKC,UAAU,QACbkF,MAAO,CAACC,QAASR,EAAmB,OAAS,UAC7CE,EAAA/E,EAAAC,cAAA,QAAMC,UAAU,QAAQ8E,QAAS,kBAAMF,GAAoB,KAA3D,QACAC,EAAA/E,EAAAC,cAAA,OAAKC,UAAWoE,EAAkB/D,EAAM+E,SAAUH,IAAKV,EAAI1E,KACzDkF,IAAKC,aAAyBT,EAAIpE,OACpC0E,EAAA/E,EAAAC,cAAA,OAAKC,UAAU,WAAWuE,EAAI1E,0CCxBtCP,EAAA+F,EAAAC,GAAA,IAAAjG,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAkG,EAAAjG,EAAA,IAAAkG,EAAAlG,EAAA,IAAAmG,EAAAnG,EAAA,IA8HeoG,UA/CW,WAGxB,OACEnG,EAAAO,EAAAC,cAAA,OAAKC,UAAU,QACbT,EAAAO,EAAAC,cAAA,OAAKC,UAAU,aAAf,uBACAT,EAAAO,EAAAC,cAAA,6FACAR,EAAAO,EAAAC,cAAA,gEACAR,EAAAO,EAAAC,cAAA,0CACAR,EAAAO,EAAAC,cAAA,yBACeR,EAAAO,EAAAC,cAAA,kCADf,KAGAR,EAAAO,EAAAC,cAACwF,EAAA,EAAD,CAAaf,MAAM,gCACnBjF,EAAAO,EAAAC,cAAA,mCACyBR,EAAAO,EAAAC,cAAA,yBADzB,cAC0DR,EAAAO,EAAAC,cAAA,6BAD1D,qDAEyCR,EAAAO,EAAAC,cAAA,wCAFzC,KAIAR,EAAAO,EAAAC,cAAA,uBACaR,EAAAO,EAAAC,cAAA,yBADb,YAC4CR,EAAAO,EAAAC,cAAA,kCAD5C,iHAIAR,EAAAO,EAAAC,cAACwF,EAAA,EAAD,CAAaf,MAAM,gCACnBjF,EAAAO,EAAAC,cAAA,OAAKC,UAAU,gBAAf,eACAT,EAAAO,EAAAC,cAAA,6DACmDR,EAAAO,EAAAC,cAAA,YAAO4F,KAAP,mDADnD,0FAKApG,EAAAO,EAAAC,cAAC0F,EAAA,EAAD,CAAatD,KAtGX,yvDAuGF5C,EAAAO,EAAAC,cAAA,OAAKC,UAAU,gBAAf,aACAT,EAAAO,EAAAC,cAAA,+CACqCR,EAAAO,EAAAC,cAAA,8BADrC,QACqER,EAAAO,EAAAC,cAAA,6BADrE,+CAEqDR,EAAAO,EAAAC,cAAA,mBAFrD,SAEyER,EAAAO,EAAAC,cAAA,gCAFzE,KAKAR,EAAAO,EAAAC,cAAA,qSAMAR,EAAAO,EAAAC,cAACwF,EAAA,EAAD,CAAaf,MAAM,sBACnBjF,EAAAO,EAAAC,cAACyF,EAAA,EAAD,CAAYlF,KAAK,mBAAmBC,KAAK","file":"static/js/10.d048af6b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport  {getRoute} from '../../const/Routes';\r\nimport './Navigators.css';\r\n\r\nconst Navigators = (props) => {\r\n  return (\r\n    <div className=\"navs\">\r\n      <span className=\"left\">\r\n        {getContent(props.prev, 'Previous')}\r\n      </span>\r\n      <span className=\"right\">\r\n        {getContent(props.next, 'Next')}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavigators.propTypes = {\r\n  prev: PropTypes.string,\r\n  next: PropTypes.string\r\n};\r\n\r\nlet getContent = (pathKey, text) => {\r\n  if (pathKey) {\r\n    return <NavLink className=\"btn\" to={getRoute(pathKey).path}>{text}</NavLink>;\r\n  } else {\r\n    return <span className=\"btn-disabled\">{text}</span>;\r\n  }\r\n}\r\n\r\nexport default Navigators;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CodeSnippet.css';\r\n\r\nconst keywordColor = 'yellow';\r\nconst keywords = [\r\n  'abstract', 'assert', 'boolean', 'break', 'byte', 'case', 'catch', 'char', 'class', 'const',\r\n  'do', 'double', 'else', 'enum', 'extends', 'final', 'finally', 'float', 'for', 'goto', 'if',\r\n  'implements', 'import', 'instanceof', 'int', 'interface', 'long', 'native', 'new', 'package',\r\n  'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch',\r\n  'synchronized', 'this', 'throw', 'throws', 'transient', 'try', 'void', 'volatile', 'while',\r\n  'true', 'false', 'null'\r\n];\r\nconst annotationColor = 'lightgray';\r\nconst annotations = ['Override'];\r\nconst commentColor = 'lightgray';\r\nconst closeTag = '</span>';\r\n\r\nconst processKeyword = (someCode) => {\r\n  let processed = someCode;\r\n  let openTag = '<span style=\"color: '+keywordColor+'; font-weight: bold;\">';\r\n  keywords.forEach(kw => \r\n    processed = processed.replace(\r\n                            new RegExp('\\\\b'+kw+'\\\\b', 'g'), \r\n                            openTag+kw+closeTag\r\n  ));\r\n  return processed;\r\n};\r\n\r\nconst processAnnotations = (someCode) => {\r\n  let processed = someCode;\r\n  let openTag = '<span style=\"color: '+annotationColor+'; font-weight: bold;\">';\r\n  annotations.forEach(annot => \r\n    processed = processed.replace(\r\n                            new RegExp('@\\\\b'+annot+'\\\\b', 'g'), \r\n                            openTag+'@'+annot+closeTag\r\n  ));\r\n  return processed;\r\n};\r\n\r\nconst processComments = (someCode) => {\r\n  let processed = someCode;\r\n  // picks out single line comments starting with // and enclosed in /* */, \r\n  // and multiline comments too\r\n  let regexp = /\\/\\*[\\s\\S]*?\\*\\/|([^:]|^)\\/\\/.*$/gm;\r\n  let matches = processed.match(regexp);\r\n  if (matches) {\r\n    let comments = [...matches];\r\n    let openTag = '<span style=\"color: '+commentColor+'; font-style: italic;\">';\r\n    comments.forEach(\r\n      comment => processed = processed.replace(comment, openTag+comment+closeTag)\r\n    );\r\n  }\r\n  return processed;\r\n};\r\n\r\nconst processIndentations = (someCode) => {\r\n  let processed = '';\r\n  let lineStart = true;\r\n  for (var i=0; i<someCode.length; i++) {\r\n    if (someCode[i] === '\\n') {\r\n      processed += '<br>';\r\n      lineStart = true;\r\n    } else if (lineStart && someCode[i] === ' ') {\r\n      processed += '&nbsp;';\r\n    } else {\r\n      lineStart = false;\r\n      processed += someCode[i];\r\n    }\r\n  }\r\n  return processed;\r\n};\r\n\r\nconst parseAndTag = (someCode) => {\r\n  someCode = processComments(someCode);\r\n  someCode = processIndentations(someCode);\r\n  someCode = processKeyword(someCode);\r\n  someCode = processAnnotations(someCode);\r\n  return someCode;\r\n};\r\n\r\nconst CodeSnippet = (props) => {\r\n  let someCode = parseAndTag(props.code);\r\n  //const preBlock = { __html: \"<pre>\" + someCode + \"</pre>\" };\r\n  const preBlock = { __html: \"<div id='pre'>\" + someCode + \"</div>\" };\r\n  return <div dangerouslySetInnerHTML={ preBlock }></div>;\r\n};\r\n\r\nCodeSnippet.propTypes = {\r\n  code: PropTypes.string\r\n};\r\n\r\nexport default CodeSnippet;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export const allImages = {\r\n  evolution : [\r\n    {\r\n      id:\"evolutionMediatorCD\",\r\n      path:\"/evolution/Evolution-Mediator-ClassDiagram.svg\",\r\n      text:\"Mediator Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionMediatorSD\",\r\n      path:\"/evolution/Evolution-Mediator-SequenceDiagram.svg\",\r\n      text:\"Mediator Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionActionCommandCD\",\r\n      path:\"/evolution/Evolution-ActionCommand-ClassDiagram.svg\",\r\n      text:\"Action Command Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionActionCommandSD\",\r\n      path:\"/evolution/Evolution-ActionCommand-SequenceDiagram.svg\",\r\n      text:\"Action Command Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionStrategyTemplateCD\",\r\n      path:\"/evolution/Evolution-ActionStrategyTemplate-ClassDiagram.svg\",\r\n      text:\"Action Strategy and Template Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionStrategyTemplateSD\",\r\n      path:\"/evolution/Evolution-ActionStrategyTemplate-SequenceDiagram.svg\",\r\n      text:\"Action Strategy and Template Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionBridgeCD\",\r\n      path:\"/evolution/Evolution-StrategyCommandBridge-ClassDiagram.svg\",\r\n      text:\"Bridge Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionObserverCD\",\r\n      path:\"/evolution/Evolution-BeatObserver-ClassDiagram.svg\",\r\n      text:\"Observer Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionActionObserverSD\",\r\n      path:\"/evolution/Evolution-ActionObserver-SequenceDiagram.svg\",\r\n      text:\"Action Observer Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionTikTokSD\",\r\n      path:\"/evolution/Evolution-TikTok-SequenceDiagram.svg\",\r\n      text:\"Tik Tok Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionActionSD\",\r\n      path:\"/evolution/Evolution-Action-SequenceDiagram.svg\",\r\n      text:\"Action Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionReactionSD\",\r\n      path:\"/evolution/Evolution-Reaction-SequenceDiagram.svg\",\r\n      text:\"Reaction Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionDecoratorCD\",\r\n      path:\"/evolution/Evolution-Decorator-ClassDiagram.svg\",\r\n      text:\"Decorator Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionDecoratorSD\",\r\n      path:\"/evolution/Evolution-Decorator-SequenceDiagram.svg\",\r\n      text:\"Decorator Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionAdapterCD\",\r\n      path:\"/evolution/Evolution-Adapter-ClassDiagram.svg\",\r\n      text:\"Adapter Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionAdapterSD\",\r\n      path:\"/evolution/Evolution-Adapter-SequenceDiagram.svg\",\r\n      text:\"Adapter Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionCompositeCD\",\r\n      path:\"/evolution/Evolution-Composite-ClassDiagram.svg\",\r\n      text:\"Composite Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionMoveVisitorCD\",\r\n      path:\"/evolution/Evolution-MoveVisitor-ClassDiagram.svg\",\r\n      text:\"Move Visitor Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionMoveVisitorSD\",\r\n      path:\"/evolution/Evolution-MoveVisitor-SequenceDiagram.svg\",\r\n      text:\"Move Visitor Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionFighterVisitorSD\",\r\n      path:\"/evolution/Evolution-FighterVisitor-SequenceDiagram.svg\",\r\n      text:\"Fighter Visitor Sequence Diagram\"\r\n    }\r\n  ],\r\n  hierarchy : [\r\n    {\r\n      id:\"hierarchyMove\",\r\n      path:\"/hierarchy/Hierarchy-Move.svg\",\r\n      text:\"Class Hierarchy of Moves\"\r\n    },\r\n    {\r\n      id:\"hierarchyActionCommand\",\r\n      path:\"/hierarchy/Hierarchy-ActionCommand.svg\",\r\n      text:\"Class Hierarchy of ActionCommand\"\r\n    },\r\n    {\r\n      id:\"hierarchyReactionCommand\",\r\n      path:\"/hierarchy/Hierarchy-ReactionCommand.svg\",\r\n      text:\"Class Hierarchy of ReactionCommand\"\r\n    },\r\n    {\r\n      id:\"hierarchyFighter\",\r\n      path:\"/hierarchy/Hierarchy-Fighter.svg\",\r\n      text:\"Class Hierarchy of Fighter\"\r\n    }\r\n  ]\r\n}\r\n\r\nexport const getImage = (image) => {\r\n  return [...allImages.evolution, ...allImages.hierarchy].find(i => i.id === image);\r\n}\r\n\r\nexport default {\r\n  allImages, getImage\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport  {getImage} from '../../const/Images';\r\nimport './ImageHolder.css';\r\n\r\nconst ImageHolder = props => {\r\n  let img = getImage(props.imgId);\r\n  const [largeDivDisabled, setLargeDivDisabled] = useState(true);\r\n  \r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"regular\" onClick={() => setLargeDivDisabled(false)}>\r\n        <img \r\n          className=\"regular-content\" \r\n          src={process.env.PUBLIC_URL + img.path} \r\n          alt={img.text} \r\n        />\r\n        <div>{img.text}</div>\r\n      </div>\r\n      <div className=\"large\" \r\n        style={{display: largeDivDisabled ? 'none' : 'block' }} >\r\n        <span className=\"close\" onClick={() => setLargeDivDisabled(true)}>&times;</span>\r\n        <img className={largeContentClass(props.imgSize)} alt={img.text} \r\n          src={process.env.PUBLIC_URL + img.path} />\r\n        <div className=\"caption\">{img.text}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nImageHolder.propTypes = {\r\n  imgId: PropTypes.string,\r\n  imgSize: PropTypes.string\r\n};\r\n\r\nlet largeContentClass = (full) => {\r\n  if (!full)\r\n    return 'large-content';\r\n  switch(full) {\r\n    case 'medium':\r\n      return 'large-content-med';\r\n    case 'large':\r\n      return 'large-content-full';\r\n    case 'small':\r\n    default:\r\n      return 'large-content';\r\n  }\r\n};\r\n\r\nexport default ImageHolder;","import React from 'react';\r\nimport ImageHolder from '../common/ImageHolder';\r\nimport Navigators from '../common/Navigators';\r\nimport CodeSnippet from '../common/CodeSnippet';\r\n\r\nlet code = `\r\n\r\n  public interface ActionStrategy {\r\n    void perform();\r\n  }\r\n\r\n  public abstract class AbstractActionStrategy implements ActionStrategy {\r\n    protected AbstractFighter fighter;\r\n\r\n    @Override\r\n    public void perform() {\r\n      ActionCommand action = selectAction();\r\n      execute(action);\r\n    }\r\n\r\n    protected abstract ActionCommand selectAction();\r\n\r\n    protected abstract void execute(ActionCommand action);\r\n\r\n  }\r\n\r\n  public class ConcreteActionStrategy extends AbstractActionStrategy {\r\n\r\n    @Override\r\n    protected ActionCommand selectAction() {\r\n      List&lt;ActionCommand&gt; actions = this.fighter.allActions();\r\n      // some strategy to select an action from actions \r\n      return selectedAction;\r\n    }\r\n\r\n    @Override\r\n    protected void execute(ActionCommand action) {\r\n      action.execute();\r\n    }\r\n\r\n  }\r\n\r\n  public class AConcreteFighter implements Fighter {\r\n    List&lt;ActionCommand&gt; actions; // all available actions to the fighter\r\n    ActionStrategy actionStrategy;\r\n    ...\r\n\r\n    public List&lt;ActionCommand&gt; allActions() {\r\n      return this.actions;\r\n    }\r\n\r\n    @Override\r\n    public void act() {\r\n      actionStrategy.perform();\r\n    }\r\n\r\n    public void addAction(ActionCommand action) {\r\n      this.actions.add(action);\r\n    }\r\n\r\n    public void setActionStrategy(ActionStrategy actionStrategy) {\r\n      this.actionStrategy = actionStrategy;\r\n    }\r\n\r\n    ...\r\n\r\n  }\r\n\r\n  // setting it up\r\n  AConcreteFighter fighter = new AConcreteFighter();\r\n  ActionCommand actionA = new AConcreteAction();\r\n  fighter.addAction(actionA);\r\n  ActionCommand actionB = new AConcreteAction();\r\n  fighter.addAction(actionB);\r\n  ActionStrategy actionStrategy = new ConcreteActionStrategy();\r\n  fighter.setActionStrategy(actionStrategy);\r\n\r\n`;\r\n\r\nconst EvolutionStrategy = () => {\r\n  //const slash = '&#47;';\r\n  const slash = '/';\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"pageTitle\">Strategy For Action</div>\r\n      <p>Ok, now the fighters are capable of delivering hits based upon their properties.</p>\r\n      <p>But should they be limited to just one type of hit?</p>\r\n      <p>If not, which hit to perform?</p>\r\n      <p>\r\n        Introducting <strong>Strategy Pattern</strong>.\r\n      </p>\r\n      <ImageHolder imgId=\"evolutionStrategyTemplateCD\" />\r\n      <p>\r\n        Instead of calling the <code>execute()</code> method of <code>ActionCommand</code> directly, \r\n        the Fighter delegates the call to it's <code>ActionStrategy.perform()</code>.\r\n      </p>\r\n      <p>\r\n        The method <code>perform()</code> follows <strong>Template Pattern</strong> where it selects \r\n        an action from the available list of actions available to the fighter and then executes it.\r\n      </p>\r\n      <ImageHolder imgId=\"evolutionStrategyTemplateSD\" />\r\n      <div className=\"sectionTitle\">Sample Code</div>\r\n      <p>\r\n        The modified code looks somewhat like this. The (<code>{slash+slash} some strategy to select \r\n        an action from actions</code>) differs for different implementation of templates resulting \r\n        in different strategies.\r\n      </p>\r\n      <CodeSnippet code={code} />\r\n      <div className=\"sectionTitle\">Bridge It</div>\r\n      <p>\r\n        As a small side note, they way our <code>ActionStrategy</code> and <code>ActionCommand\r\n        </code> are in such harmony here, this is what the <em>gurus</em> call <strong>Bridge \r\n        Pattern</strong>.\r\n      </p>\r\n      <p>\r\n        The idea is that the fighter can have any implementation of the said strategy with any \r\n        number of hits available to him, none of them are coupled to each other. Again individual \r\n        strategy implementation can be specifically customized to the fighter, his style and \r\n        available actions.\r\n      </p>\r\n      <ImageHolder imgId=\"evolutionBridgeCD\" />\r\n      <Navigators prev=\"evolutionCommand\" next=\"evolutionObserver\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EvolutionStrategy;"],"sourceRoot":""}