{"version":3,"sources":["components/common/Navigators.js","components/common/CodeSnippet.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","const/Images.js","components/common/ImageHolder.js","components/evolution/EvolutionAdapter.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_const_Routes__WEBPACK_IMPORTED_MODULE_2__","getContent","pathKey","text","a","createElement","className","to","getRoute","path","Navigators","props","prev","next","keywords","annotations","parseAndTag","someCode","processed","matches","match","comments","Object","C_DataBox_Creative_code_workspace_KombatSim_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","forEach","comment","replace","processComments","annot","RegExp","openTag","processAnnotations","kw","processKeyword","CodeSnippet","preBlock","__html","code","react__WEBPACK_IMPORTED_MODULE_1___default","dangerouslySetInnerHTML","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","allImages","evolution","id","hierarchy","getImage","image","concat","toConsumableArray","find","largeContentClass","full","ImageHolder","img","imgId","_useState2","useState","largeDivDisabled","setLargeDivDisabled","react_default","onClick","src","process","alt","style","display","imgSize","r","__webpack_exports__","_common_ImageHolder__WEBPACK_IMPORTED_MODULE_1__","_common_Navigators__WEBPACK_IMPORTED_MODULE_2__","_common_CodeSnippet__WEBPACK_IMPORTED_MODULE_3__","EvolutionAdapter"],"mappings":"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","file":"static/js/3.881c5628.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport  {getRoute} from '../../const/Routes';\r\nimport './Navigators.css';\r\n\r\nconst Navigators = (props) => {\r\n  return (\r\n    <div className=\"navs\">\r\n      <span className=\"left\">\r\n        {getContent(props.prev, 'Previous')}\r\n      </span>\r\n      <span className=\"right\">\r\n        {getContent(props.next, 'Next')}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavigators.propTypes = {\r\n  prev: PropTypes.string,\r\n  next: PropTypes.string\r\n};\r\n\r\nlet getContent = (pathKey, text) => {\r\n  if (pathKey) {\r\n    return <NavLink className=\"btn\" to={getRoute(pathKey).path}>{text}</NavLink>;\r\n  } else {\r\n    return <span className=\"btn-disabled\">{text}</span>;\r\n  }\r\n}\r\n\r\nexport default Navigators;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CodeSnippet.css';\r\n\r\nconst keywordColor = 'yellow';\r\nconst keywords = [\r\n  'abstract', 'assert', 'boolean', 'break', 'byte', 'case', 'catch', 'char', 'class', 'const',\r\n  'do', 'double', 'else', 'enum', 'extends', 'final', 'finally', 'float', 'for', 'goto', 'if',\r\n  'implements', 'import', 'instanceof', 'int', 'interface', 'long', 'native', 'new', 'package',\r\n  'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch',\r\n  'synchronized', 'this', 'throw', 'throws', 'transient', 'try', 'void', 'volatile', 'while',\r\n  'true', 'false', 'null'\r\n];\r\nconst annotationColor = 'lightgray';\r\nconst annotations = ['Override'];\r\nconst commentColor = 'lightgray';\r\nconst closeTag = '</span>';\r\n\r\nconst processKeyword = (someCode) => {\r\n  let processed = someCode;\r\n  let openTag = '<span style=\"color: '+keywordColor+'; font-weight: bold;\">';\r\n  keywords.forEach(kw => \r\n    processed = processed.replace(\r\n                            new RegExp('\\\\b'+kw+'\\\\b', 'g'), \r\n                            openTag+kw+closeTag\r\n  ));\r\n  return processed;\r\n};\r\n\r\nconst processAnnotations = (someCode) => {\r\n  let processed = someCode;\r\n  let openTag = '<span style=\"color: '+annotationColor+'; font-weight: bold;\">';\r\n  annotations.forEach(annot => \r\n    processed = processed.replace(\r\n                            new RegExp('@\\\\b'+annot+'\\\\b', 'g'), \r\n                            openTag+'@'+annot+closeTag\r\n  ));\r\n  return processed;\r\n};\r\n\r\nconst processComments = (someCode) => {\r\n  let processed = someCode;\r\n  // picks out single line comments starting with // and enclosed in /* */, \r\n  // and multiline comments too\r\n  let regexp = /\\/\\*[\\s\\S]*?\\*\\/|([^:]|^)\\/\\/.*$/gm;\r\n  let matches = processed.match(regexp);\r\n  if (matches) {\r\n    let comments = [...matches];\r\n    let openTag = '<span style=\"color: '+commentColor+'; font-style: italic;\">';\r\n    comments.forEach(\r\n      comment => processed = processed.replace(comment, openTag+comment+closeTag)\r\n    );\r\n  }\r\n  return processed;\r\n};\r\n\r\nconst parseAndTag = (someCode) => {\r\n  someCode = processKeyword(someCode);\r\n  someCode = processAnnotations(someCode);\r\n  someCode = processComments(someCode);\r\n  return someCode;\r\n};\r\n\r\nconst CodeSnippet = (props) => {\r\n  let someCode = parseAndTag(props.code);\r\n  const preBlock = { __html: \"<pre>\" + someCode + \"</pre>\" };\r\n  return <div dangerouslySetInnerHTML={ preBlock }></div>;\r\n};\r\n\r\nCodeSnippet.propTypes = {\r\n  code: PropTypes.string\r\n};\r\n\r\nexport default CodeSnippet;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export const allImages = {\r\n  evolution : [\r\n    {\r\n      id:\"evolutionMediatorCD\",\r\n      path:\"/evolution/Evolution-Mediator-ClassDiagram.svg\",\r\n      text:\"Mediator Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionMediatorSD\",\r\n      path:\"/evolution/Evolution-Mediator-SequenceDiagram.svg\",\r\n      text:\"Mediator Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionActionCommandCD\",\r\n      path:\"/evolution/Evolution-ActionCommand-ClassDiagram.svg\",\r\n      text:\"Action Command Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionActionCommandSD\",\r\n      path:\"/evolution/Evolution-ActionCommand-SequenceDiagram.svg\",\r\n      text:\"Action Command Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionStrategyTemplateCD\",\r\n      path:\"/evolution/Evolution-ActionStrategyTemplate-ClassDiagram.svg\",\r\n      text:\"Action Strategy and Template Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionStrategyTemplateSD\",\r\n      path:\"/evolution/Evolution-ActionStrategyTemplate-SequenceDiagram.svg\",\r\n      text:\"Action Strategy and Template Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionBridgeCD\",\r\n      path:\"/evolution/Evolution-StrategyCommandBridge-ClassDiagram.svg\",\r\n      text:\"Bridge Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionObserverCD\",\r\n      path:\"/evolution/Evolution-BeatObserver-ClassDiagram.svg\",\r\n      text:\"Observer Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionActionObserverSD\",\r\n      path:\"/evolution/Evolution-ActionObserver-SequenceDiagram.svg\",\r\n      text:\"Action Observer Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionTikTokSD\",\r\n      path:\"/evolution/Evolution-TikTok-SequenceDiagram.svg\",\r\n      text:\"Tik Tok Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionActionSD\",\r\n      path:\"/evolution/Evolution-Action-SequenceDiagram.svg\",\r\n      text:\"Action Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionReactionSD\",\r\n      path:\"/evolution/Evolution-Reaction-SequenceDiagram.svg\",\r\n      text:\"Reaction Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionDecoratorCD\",\r\n      path:\"/evolution/Evolution-Decorator-ClassDiagram.svg\",\r\n      text:\"Decorator Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionDecoratorSD\",\r\n      path:\"/evolution/Evolution-Decorator-SequenceDiagram.svg\",\r\n      text:\"Decorator Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionAdapterCD\",\r\n      path:\"/evolution/Evolution-Adapter-ClassDiagram.svg\",\r\n      text:\"Adapter Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionAdapterSD\",\r\n      path:\"/evolution/Evolution-Adapter-SequenceDiagram.svg\",\r\n      text:\"Adapter Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionCompositeCD\",\r\n      path:\"/evolution/Evolution-Composite-ClassDiagram.svg\",\r\n      text:\"Composite Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionMoveVisitorCD\",\r\n      path:\"/evolution/Evolution-MoveVisitor-ClassDiagram.svg\",\r\n      text:\"Move Visitor Class Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionMoveVisitorSD\",\r\n      path:\"/evolution/Evolution-MoveVisitor-SequenceDiagram.svg\",\r\n      text:\"Move Visitor Sequence Diagram\"\r\n    },\r\n    {\r\n      id:\"evolutionFighterVisitorSD\",\r\n      path:\"/evolution/Evolution-FighterVisitor-SequenceDiagram.svg\",\r\n      text:\"Fighter Visitor Sequence Diagram\"\r\n    }\r\n  ],\r\n  hierarchy : [\r\n    {\r\n      id:\"hierarchyMove\",\r\n      path:\"/hierarchy/Hierarchy-Move.svg\",\r\n      text:\"Class Hierarchy of Moves\"\r\n    },\r\n    {\r\n      id:\"hierarchyActionCommand\",\r\n      path:\"/hierarchy/Hierarchy-ActionCommand.svg\",\r\n      text:\"Class Hierarchy of ActionCommand\"\r\n    },\r\n    {\r\n      id:\"hierarchyReactionCommand\",\r\n      path:\"/hierarchy/Hierarchy-ReactionCommand.svg\",\r\n      text:\"Class Hierarchy of ReactionCommand\"\r\n    },\r\n    {\r\n      id:\"hierarchyFighter\",\r\n      path:\"/hierarchy/Hierarchy-Fighter.svg\",\r\n      text:\"Class Hierarchy of Fighter\"\r\n    }\r\n  ]\r\n}\r\n\r\nexport const getImage = (image) => {\r\n  return [...allImages.evolution, ...allImages.hierarchy].find(i => i.id === image);\r\n}\r\n\r\nexport default {\r\n  allImages, getImage\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport  {getImage} from '../../const/Images';\r\nimport './ImageHolder.css';\r\n\r\nconst ImageHolder = props => {\r\n  let img = getImage(props.imgId);\r\n  const [largeDivDisabled, setLargeDivDisabled] = useState(true);\r\n  \r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"regular\" onClick={() => setLargeDivDisabled(false)}>\r\n        <img \r\n          src={process.env.PUBLIC_URL + img.path} \r\n          alt={img.text} \r\n        />\r\n        <div>{img.text}</div>\r\n      </div>\r\n      <div className=\"large\" \r\n        style={{display: largeDivDisabled ? 'none' : 'block' }} >\r\n        <span className=\"close\" onClick={() => setLargeDivDisabled(true)}>&times;</span>\r\n        <img className={largeContentClass(props.imgSize)} alt={img.text} \r\n          src={process.env.PUBLIC_URL + img.path} />\r\n        <div className=\"caption\">{img.text}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nImageHolder.propTypes = {\r\n  imgId: PropTypes.string,\r\n  imgSize: PropTypes.string\r\n};\r\n\r\nlet largeContentClass = (full) => {\r\n  if (!full)\r\n    return 'large-content';\r\n  switch(full) {\r\n    case 'medium':\r\n      return 'large-content-med';\r\n    case 'large':\r\n      return 'large-content-full';\r\n    case 'small':\r\n    default:\r\n      return 'large-content';\r\n  }\r\n};\r\n\r\nexport default ImageHolder;","import React from 'react';\r\nimport ImageHolder from '../common/ImageHolder';\r\nimport Navigators from '../common/Navigators';\r\nimport CodeSnippet from '../common/CodeSnippet';\r\n\r\nlet code = `\r\n\r\n  public class ProxyArena implements ArenaMediator {\r\n    AbstractFighter team;\r\n\r\n    ProxyArena(AbstractFighter team) {\r\n      this.team = team;\r\n    }\r\n\r\n    @Override\r\n    public void sendMove(Move move) {\r\n      this.team.arena().sendMove(move);\r\n    }\r\n\r\n    ...\r\n  }\r\n\r\n  public class OffenderActionStrategy implements ActionStrategy {\r\n    protected AbstractFighter fighter;\r\n    protected ActionStrategy originalStrategy;\r\n\r\n    public OffenderActionStrategy(AbstractFighter fighter) {\r\n      this.fighter = fighter;\r\n      this.originalStrategy = fighter.getActionStrategy();\r\n    }\r\n\r\n    @Override\r\n    public void perform() {\r\n      if (fighterIsOffender()) {\r\n        originalStrategy.perform();\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  public class OffenderDefenderTeam extends ConcreteFighter {\r\n    ConcreteFighter offender;\r\n    ConcreteFighter defender;\r\n    ProxyArena proxy;\r\n\r\n    public OffenderDefenderTeam(ArenaMediator arena, \r\n        ConcreteFighter offender, ConcreteFighter defender) {\r\n      super(arena);\r\n      this.offender = offender;\r\n      this.defender = defender;\r\n      this.proxyArena = new new ProxyArena(this);\r\n      // set proxy arena into team members\r\n      this.offender.arena(proxyArena);\r\n      this.defender.arena(proxyArena);\r\n      // set OffenderActionStrategy into team members\r\n      this.offender.setActionStrategy(new OffenderActionStrategy(this.offender));\r\n      this.defender.setActionStrategy(new OffenderActionStrategy(this.defender));\r\n    }\r\n\r\n    @Override\r\n    public void react(Move move) {\r\n      this.defender.react(move);\r\n    }\r\n\r\n  }\r\n\r\n  // setting it up\r\n  ArenaMediator arena = new ConcreteArenaMediator();\r\n  ConcreteFighter fighterA = new ConcreteFighter(arena);\r\n  ConcreteFighter fighterB = new ConcreteFighter(arena);\r\n  OffenderDefenderTeam team = new OffenderDefenderTeam(arena, fighterA, fighterB);\r\n\r\n`;\r\n\r\nconst EvolutionAdapter = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"pageTitle\">Clash Of Teams</div>\r\n      <p>\r\n        Now that  we have Amateurs, Professionals and even Enhanced Fighters I planned to put them \r\n        in Team fights.\r\n      </p>\r\n      <p>My idea was of a simple two-man team. One fighter just attacks, the other just defends.</p>\r\n      <p>\r\n        So two teams fighting each other means I will have four fighters in the Arena. <em>But the\r\n        Arena only accepts 2 fighters!</em>\r\n      </p>\r\n      <p>\r\n        Enter <strong>Adapter Pattern</strong>. It will act as a single fighter interface to the \r\n        Arena while internally house two fighters and would delegate the <code>act()</code>/<code>\r\n        react()</code> accordingly. \r\n      </p>\r\n      <ImageHolder imgId=\"evolutionAdapterCD\" imgSize=\"medium\" />\r\n      <p>\r\n        The actual plumbing required little more than just implement <strong>Adapter Pattern\r\n        </strong>.\r\n      </p>\r\n      <p>\r\n        You see, while the <code>react()</code> redirection was easy to set up, recall that <code>\r\n        act()</code> is invoked by a <code>ActionObserver</code> on individual Fighter based on \r\n        their Dexterity.\r\n      </p>\r\n      <p><em>Need to suppress the action of the Defender.</em></p>\r\n      <p>\r\n        For this the <code>ActionStrategy</code> of the team members were wrapped to only keep the \r\n        Offender Strategy enabled. <strong>Strategy Pattern</strong> <em>yo!</em>\r\n      </p>\r\n      <p>There was another hiccup in the <code>act()</code> component.</p>\r\n      <p><em>The Hit message to the  right recipient.</em></p>\r\n      <p>\r\n        Because there were multiple fighters on the arena now, <em>how does the arena know which \r\n        recipient to send it to?</em>\r\n      </p>\r\n      <p>This was resolved using <strong>Proxy Pattern</strong>.</p>\r\n      <p>\r\n        A ProxyArena would take the hit message from a team member, then send it to the actual Arena \r\n        as a hit that has come from the team rather than the specific fighter.\r\n      </p>\r\n      <ImageHolder imgId=\"evolutionAdapterSD\" imgSize=\"medium\" />\r\n      <div className=\"sectionTitle\">Sample Code</div>\r\n      <CodeSnippet code={code} />\r\n      <p>Next ... TagTeam!</p>\r\n      <p>\r\n        Unlike the OffenderDefenderTeam, TagTeam can have as many fighters in the team as you want.\r\n      </p>\r\n      <p>\r\n        The idea is that among all fighters only one fighter is active at any given moment. At regular \r\n        intervals the fighter keeps changing in a round robin fashion.\r\n      </p>\r\n      <p>\r\n        To keep track of the active fighter in the team, we use the <strong>State Pattern</strong>.\r\n      </p>\r\n      <Navigators prev=\"evolutionDecorator\" next=\"evolutionDamages\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EvolutionAdapter;"],"sourceRoot":""}